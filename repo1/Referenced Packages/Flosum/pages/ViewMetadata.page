<apex:page controller="Flosum.ViewMetadataController" sidebar="false" showHeader="false" doctype="html-5.0" title="{!history.Component__r.Flosum__Component_Name__c}" standardStylesheets="false">
    <style>
        table.diff .delete {
      background-color: #FFFFFF;
    }
    table.diff .insert {
        display: none;
    }
    table.diff tbody th {
        display: none;
      }
      table.diff thead th {
      display: none;
    }
    table.diff tbody tr {
      border: solid 1px #F7F4D3;
      width: 500px;
    }
    </style>
    <apex:includeScript value="{!URLFOR($Resource.Flosum__jszipmaster, 'jszip-master/dist/jszip.js')}"/>
    <apex:stylesheet value="{!$Resource.Flosum__DiffCSS}"/>
    <script src="{!$Resource.DiffJS}"></script>
    <c:Wait />
    <apex:pagemessages id="msg"/>
    <apex:form id="form" rendered="{!if(history != null,true,false)}">
        <apex:actionfunction name="startCompare" onComplete="diffUsingJS(1,'',''); hide();" rerender="none"/ >
        <apex:pageBlock title="{!history.Component__r.Flosum__Component_Name__c}">
            <apex:pageBlockSection columns="1">
                <textarea  id="baseText" style="display:none" cols="50">
                </textarea>
                <input type="text" id="contextSize" value="10000" style="display:none"/>
                <textarea id="newText" style="display:none" cols="50" >
                </textarea>
                <apex:pageBlockSectionItem >
                    <apex:outputpanel id="compareBlock">
                        <div id="diffoutput">
                        </div> 
                    </apex:outputpanel>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>
    <script>
    	var mmap = {};
	    mmap['CustomField'] = true;
	    mmap['CustomLabel'] = true;
	    mmap['CompactLayout'] = true;
	    mmap['WebLink'] = true;
	    mmap['RecordType'] = true;
	    mmap['ListView'] = true;
	    mmap['FieldSet'] = true;
	    mmap['AssignmentRule'] = true;
	    mmap['AutoResponseRule'] = true;
	    mmap['ValidationRule'] = true;
	    mmap['WorkflowTask'] = true;
		mmap['WorkflowOutboundMessage'] = true;
		mmap['WorkflowFieldUpdate'] = true;
		mmap['WorkflowAlert'] = true;
		mmap['WorkflowRule'] = true;
		mmap['SharingOwnerRule'] = true;
		mmap['SharingCriteriaRule'] = true;
		mmap['BusinessProcess'] = true;
		mmap['SharingReason'] = true;
		mmap['EscalationRule'] = true;
		mmap['MatchingRule'] = true;
		mmap['ManagedTopic'] = true;
		mmap['Profile'] = true;
		mmap['PermissionSet'] = true;
		
        var attachmentId = ""+'{!attachmentId}';
        var fileName = ""+'{!fileName}';
        var compType = ""+'{!compType}';
        if(attachmentId.length == 18)
        {
            show();     
            Visualforce.remoting.Manager.invokeAction(
				        '{!$RemoteAction.ViewMetadataController.getBase64}',
				        attachmentId,
				        handeleGetData
				    );
        }
        
        function handeleGetData(r,e)
		{
		    if(e.status && r) 
		    {
		    	if(r != '')
		    	{
		    		var zip = new JSZip(r,{base64:true});
	                if(zip.files[fileName] != undefined)
	                {
	                	if(mmap[compType] == true)
	                	{
	                		document.getElementById('baseText').value = formatXml(zip.files[fileName].asText());
	                	}
	                	else
	                    	document.getElementById('baseText').value = zip.files[fileName].asText();
	                }
	                else
	                {
	                    document.getElementById('baseText').value = "";
	                }
	                startCompare();
		    	}
		    }
		    else
		    {
		    	console.log(e.message);
		    	//showMessage(e.message);
		    }
        }
        
        function formatXml(xml) {
		    var formatted = '';
		    var reg = /(>)(<)(\/*)/g;
		    xml = xml.replace(reg, '$1\r\n$2$3');
		    var pad = 0;
		    jQuery.each(xml.split('\r\n'), function(index, node) {
		        var indent = 0;
		        if (node.match( /.+<\/\w[^>]*>$/ )) {
		            indent = 0;
		        } else if (node.match( /^<\/\w/ )) {
		            if (pad != 0) {
		                pad -= 1;
		            }
		        } else if (node.match( /^<\w[^>]*[^\/]>.*$/ )) {
		            indent = 1;
		        } else {
		            indent = 0;
		        }
		
		        var padding = '';
		        for (var i = 0; i < pad; i++) {
		            padding += '  ';
		        }
		
		        formatted += padding + node + '\r\n';
		        pad += indent;
		    });
		
		    return formatted;
		}
    </script>
</apex:page>